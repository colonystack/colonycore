# DO NOT EDIT MANUALLY.
# Generated snapshot of exported pluginapi surface (types, funcs, consts, vars, methods on exported interfaces) used by TestPluginAPISnapshot.
FUNC ConvertAction(colonycore/pkg/pluginapi.Action) colonycore/pkg/pluginapi.ActionRef
FUNC ConvertEntityType(colonycore/pkg/pluginapi.EntityType) colonycore/pkg/pluginapi.EntityTypeRef
FUNC GetVersionProvider() colonycore/pkg/pluginapi.VersionProvider
FUNC NewActionContext() colonycore/pkg/pluginapi.ActionContext
FUNC NewChange(colonycore/pkg/pluginapi.EntityTypeRef,colonycore/pkg/pluginapi.ActionRef,any,any) colonycore/pkg/pluginapi.Change
FUNC NewChangeBuilder() *colonycore/pkg/pluginapi.ChangeBuilder
FUNC NewEntityContext() colonycore/pkg/pluginapi.EntityContext
FUNC NewHousingContext() colonycore/pkg/pluginapi.HousingContext
FUNC NewLifecycleStageContext() colonycore/pkg/pluginapi.LifecycleStageContext
FUNC NewProtocolContext() colonycore/pkg/pluginapi.ProtocolContext
FUNC NewResult([]colonycore/pkg/pluginapi.Violation) colonycore/pkg/pluginapi.Result
FUNC NewResultBuilder() *colonycore/pkg/pluginapi.ResultBuilder
FUNC NewSeverityContext() colonycore/pkg/pluginapi.SeverityContext
FUNC NewViolation(string,colonycore/pkg/pluginapi.SeverityRef,string,colonycore/pkg/pluginapi.EntityTypeRef,string) colonycore/pkg/pluginapi.Violation
FUNC NewViolationBuilder() *colonycore/pkg/pluginapi.ViolationBuilder
FUNC NewViolationWithEntityRef(string,colonycore/pkg/pluginapi.SeverityRef,string,colonycore/pkg/pluginapi.EntityTypeRef,string) colonycore/pkg/pluginapi.Violation
TYPE Action (string)
TYPE ActionContext interface { Create() colonycore/pkg/pluginapi.ActionRef Delete() colonycore/pkg/pluginapi.ActionRef Update() colonycore/pkg/pluginapi.ActionRef }
TYPE ActionRef interface { Equals(colonycore/pkg/pluginapi.ActionRef) bool IsDestructive() bool IsMutation() bool String() string Value() colonycore/pkg/pluginapi.Action }
TYPE BaseView interface { CreatedAt() time.Time ID() string UpdatedAt() time.Time }
TYPE Change struct { unexported }
TYPE ChangeBuilder struct { unexported }
TYPE DefaultHousingContext struct { unexported }
TYPE DefaultProtocolContext struct { unexported }
TYPE DefaultVersionProvider struct { unexported }
TYPE EntityContext interface { Housing() colonycore/pkg/pluginapi.EntityTypeRef Organism() colonycore/pkg/pluginapi.EntityTypeRef Protocol() colonycore/pkg/pluginapi.EntityTypeRef }
TYPE EntityType (string)
TYPE EntityTypeRef interface { Equals(colonycore/pkg/pluginapi.EntityTypeRef) bool IsCore() bool String() string Value() colonycore/pkg/pluginapi.EntityType }
TYPE EnvironmentTypeRef interface { Equals(colonycore/pkg/pluginapi.EnvironmentTypeRef) bool IsAquatic() bool IsHumid() bool String() string }
TYPE HousingContext interface { Aquatic() colonycore/pkg/pluginapi.EnvironmentTypeRef Arboreal() colonycore/pkg/pluginapi.EnvironmentTypeRef Humid() colonycore/pkg/pluginapi.EnvironmentTypeRef Terrestrial() colonycore/pkg/pluginapi.EnvironmentTypeRef }
TYPE HousingUnitView interface { Capacity() int CreatedAt() time.Time Environment() string Facility() string GetEnvironmentType() colonycore/pkg/pluginapi.EnvironmentTypeRef ID() string IsAquaticEnvironment() bool IsHumidEnvironment() bool Name() string SupportsSpecies(string) bool UpdatedAt() time.Time }
TYPE LifecycleStage (string)
TYPE LifecycleStageContext interface { Adult() colonycore/pkg/pluginapi.LifecycleStageRef Deceased() colonycore/pkg/pluginapi.LifecycleStageRef Juvenile() colonycore/pkg/pluginapi.LifecycleStageRef Larva() colonycore/pkg/pluginapi.LifecycleStageRef Planned() colonycore/pkg/pluginapi.LifecycleStageRef Retired() colonycore/pkg/pluginapi.LifecycleStageRef }
TYPE LifecycleStageRef interface { Equals(colonycore/pkg/pluginapi.LifecycleStageRef) bool IsActive() bool String() string Value() colonycore/pkg/pluginapi.LifecycleStage }
TYPE OrganismView interface { Attributes() map[string]any CohortID() (string,bool) CreatedAt() time.Time GetCurrentStage() colonycore/pkg/pluginapi.LifecycleStageRef HousingID() (string,bool) ID() string IsActive() bool IsDeceased() bool IsRetired() bool Line() string Name() string ProjectID() (string,bool) ProtocolID() (string,bool) Species() string Stage() colonycore/pkg/pluginapi.LifecycleStage UpdatedAt() time.Time }
TYPE Plugin interface { Name() string Register(colonycore/pkg/pluginapi.Registry) error Version() string }
TYPE ProtocolContext interface { Active() colonycore/pkg/pluginapi.ProtocolStatusRef Cancelled() colonycore/pkg/pluginapi.ProtocolStatusRef Completed() colonycore/pkg/pluginapi.ProtocolStatusRef Draft() colonycore/pkg/pluginapi.ProtocolStatusRef Suspended() colonycore/pkg/pluginapi.ProtocolStatusRef }
TYPE ProtocolStatusRef interface { Equals(colonycore/pkg/pluginapi.ProtocolStatusRef) bool IsActive() bool IsTerminal() bool String() string }
TYPE ProtocolView interface { CanAcceptNewSubjects() bool Code() string CreatedAt() time.Time Description() string GetCurrentStatus() colonycore/pkg/pluginapi.ProtocolStatusRef ID() string IsActiveProtocol() bool IsTerminalStatus() bool MaxSubjects() int Title() string UpdatedAt() time.Time }
TYPE Registry interface { RegisterDatasetTemplate(colonycore/pkg/datasetapi.Template) error RegisterRule(colonycore/pkg/pluginapi.Rule) RegisterSchema(string,map[string]any) }
TYPE Result struct { unexported }
TYPE ResultBuilder struct { unexported }
TYPE Rule interface { Evaluate(context.Context,colonycore/pkg/pluginapi.RuleView,[]colonycore/pkg/pluginapi.Change) (colonycore/pkg/pluginapi.Result,error) Name() string }
TYPE RuleView interface { FindHousingUnit(string) (colonycore/pkg/pluginapi.HousingUnitView,bool) FindOrganism(string) (colonycore/pkg/pluginapi.OrganismView,bool) ListHousingUnits() []colonycore/pkg/pluginapi.HousingUnitView ListOrganisms() []colonycore/pkg/pluginapi.OrganismView ListProtocols() []colonycore/pkg/pluginapi.ProtocolView }
TYPE RuleViolationError struct { unexported }
TYPE Severity (string)
TYPE SeverityContext interface { Block() colonycore/pkg/pluginapi.SeverityRef Log() colonycore/pkg/pluginapi.SeverityRef Warn() colonycore/pkg/pluginapi.SeverityRef }
TYPE SeverityRef interface { Equals(colonycore/pkg/pluginapi.SeverityRef) bool IsBlocking() bool String() string }
TYPE VersionProvider interface { APIVersion() string }
TYPE Violation struct { unexported }
TYPE ViolationBuilder struct { unexported }
