# DO NOT EDIT MANUALLY.
# Generated snapshot of exported pluginapi surface (types, funcs, consts, vars, methods on exported interfaces) used by TestPluginAPISnapshot.
FUNC ConvertAction(colonycore/pkg/pluginapi.Action) colonycore/pkg/pluginapi.ActionRef
FUNC ConvertEntityType(colonycore/pkg/pluginapi.EntityType) colonycore/pkg/pluginapi.EntityTypeRef
FUNC GetVersionProvider() colonycore/pkg/pluginapi.VersionProvider
FUNC NewActionContext() colonycore/pkg/pluginapi.ActionContext
FUNC NewChange(colonycore/pkg/pluginapi.EntityTypeRef,colonycore/pkg/pluginapi.ActionRef,any,any) colonycore/pkg/pluginapi.Change
FUNC NewChangeBuilder() *colonycore/pkg/pluginapi.ChangeBuilder
FUNC NewEntityContext() colonycore/pkg/pluginapi.EntityContext
FUNC NewFacilityContext() colonycore/pkg/pluginapi.FacilityContext
FUNC NewHousingContext() colonycore/pkg/pluginapi.HousingContext
FUNC NewLifecycleStageContext() colonycore/pkg/pluginapi.LifecycleStageContext
FUNC NewObservationContext() colonycore/pkg/pluginapi.ObservationContext
FUNC NewPermitContext() colonycore/pkg/pluginapi.PermitContext
FUNC NewProtocolContext() colonycore/pkg/pluginapi.ProtocolContext
FUNC NewResult([]colonycore/pkg/pluginapi.Violation) colonycore/pkg/pluginapi.Result
FUNC NewResultBuilder() *colonycore/pkg/pluginapi.ResultBuilder
FUNC NewSampleContext() colonycore/pkg/pluginapi.SampleContext
FUNC NewSeverityContext() colonycore/pkg/pluginapi.SeverityContext
FUNC NewSupplyContext() colonycore/pkg/pluginapi.SupplyContext
FUNC NewTreatmentContext() colonycore/pkg/pluginapi.TreatmentContext
FUNC NewViolation(string,colonycore/pkg/pluginapi.SeverityRef,string,colonycore/pkg/pluginapi.EntityTypeRef,string) colonycore/pkg/pluginapi.Violation
FUNC NewViolationBuilder() *colonycore/pkg/pluginapi.ViolationBuilder
FUNC NewViolationWithEntityRef(string,colonycore/pkg/pluginapi.SeverityRef,string,colonycore/pkg/pluginapi.EntityTypeRef,string) colonycore/pkg/pluginapi.Violation
TYPE Action (string)
TYPE ActionContext interface { Create() colonycore/pkg/pluginapi.ActionRef Delete() colonycore/pkg/pluginapi.ActionRef Update() colonycore/pkg/pluginapi.ActionRef }
TYPE ActionRef interface { Equals(colonycore/pkg/pluginapi.ActionRef) bool IsDestructive() bool IsMutation() bool String() string Value() colonycore/pkg/pluginapi.Action }
TYPE BaseView interface { CreatedAt() time.Time ID() string UpdatedAt() time.Time }
TYPE Change struct { unexported }
TYPE ChangeBuilder struct { unexported }
TYPE DefaultHousingContext struct { unexported }
TYPE DefaultProtocolContext struct { unexported }
TYPE DefaultVersionProvider struct { unexported }
TYPE EntityContext interface { Facility() colonycore/pkg/pluginapi.EntityTypeRef Housing() colonycore/pkg/pluginapi.EntityTypeRef Observation() colonycore/pkg/pluginapi.EntityTypeRef Organism() colonycore/pkg/pluginapi.EntityTypeRef Permit() colonycore/pkg/pluginapi.EntityTypeRef Procedure() colonycore/pkg/pluginapi.EntityTypeRef Project() colonycore/pkg/pluginapi.EntityTypeRef Protocol() colonycore/pkg/pluginapi.EntityTypeRef Sample() colonycore/pkg/pluginapi.EntityTypeRef SupplyItem() colonycore/pkg/pluginapi.EntityTypeRef Treatment() colonycore/pkg/pluginapi.EntityTypeRef }
TYPE EntityType (string)
TYPE EntityTypeRef interface { Equals(colonycore/pkg/pluginapi.EntityTypeRef) bool IsCore() bool String() string Value() colonycore/pkg/pluginapi.EntityType }
TYPE EnvironmentTypeRef interface { Equals(colonycore/pkg/pluginapi.EnvironmentTypeRef) bool IsAquatic() bool IsHumid() bool String() string }
TYPE FacilityAccessPolicyProvider interface { Open() colonycore/pkg/pluginapi.FacilityAccessPolicyRef Restricted() colonycore/pkg/pluginapi.FacilityAccessPolicyRef StaffOnly() colonycore/pkg/pluginapi.FacilityAccessPolicyRef }
TYPE FacilityAccessPolicyRef interface { AllowsVisitors() bool Equals(colonycore/pkg/pluginapi.FacilityAccessPolicyRef) bool IsRestricted() bool String() string }
TYPE FacilityContext interface { AccessPolicies() colonycore/pkg/pluginapi.FacilityAccessPolicyProvider Zones() colonycore/pkg/pluginapi.FacilityZoneProvider }
TYPE FacilityView interface { AccessPolicy() string CreatedAt() time.Time EnvironmentBaselines() map[string]any GetAccessPolicy() colonycore/pkg/pluginapi.FacilityAccessPolicyRef GetZone() colonycore/pkg/pluginapi.FacilityZoneRef HousingUnitIDs() []string ID() string Name() string ProjectIDs() []string SupportsHousingUnit(string) bool UpdatedAt() time.Time Zone() string }
TYPE FacilityZoneProvider interface { Biosecure() colonycore/pkg/pluginapi.FacilityZoneRef General() colonycore/pkg/pluginapi.FacilityZoneRef Quarantine() colonycore/pkg/pluginapi.FacilityZoneRef }
TYPE FacilityZoneRef interface { Equals(colonycore/pkg/pluginapi.FacilityZoneRef) bool IsBiosecure() bool IsQuarantine() bool String() string }
TYPE HousingContext interface { Aquatic() colonycore/pkg/pluginapi.EnvironmentTypeRef Arboreal() colonycore/pkg/pluginapi.EnvironmentTypeRef Humid() colonycore/pkg/pluginapi.EnvironmentTypeRef Terrestrial() colonycore/pkg/pluginapi.EnvironmentTypeRef }
TYPE HousingUnitView interface { Capacity() int CreatedAt() time.Time Environment() string FacilityID() string GetEnvironmentType() colonycore/pkg/pluginapi.EnvironmentTypeRef ID() string IsAquaticEnvironment() bool IsHumidEnvironment() bool Name() string SupportsSpecies(string) bool UpdatedAt() time.Time }
TYPE LifecycleStage (string)
TYPE LifecycleStageContext interface { Adult() colonycore/pkg/pluginapi.LifecycleStageRef Deceased() colonycore/pkg/pluginapi.LifecycleStageRef Juvenile() colonycore/pkg/pluginapi.LifecycleStageRef Larva() colonycore/pkg/pluginapi.LifecycleStageRef Planned() colonycore/pkg/pluginapi.LifecycleStageRef Retired() colonycore/pkg/pluginapi.LifecycleStageRef }
TYPE LifecycleStageRef interface { Equals(colonycore/pkg/pluginapi.LifecycleStageRef) bool IsActive() bool String() string Value() colonycore/pkg/pluginapi.LifecycleStage }
TYPE ObservationContext interface { Shapes() colonycore/pkg/pluginapi.ObservationShapeProvider }
TYPE ObservationShapeProvider interface { Mixed() colonycore/pkg/pluginapi.ObservationShapeRef Narrative() colonycore/pkg/pluginapi.ObservationShapeRef Structured() colonycore/pkg/pluginapi.ObservationShapeRef }
TYPE ObservationShapeRef interface { Equals(colonycore/pkg/pluginapi.ObservationShapeRef) bool HasNarrativeNotes() bool HasStructuredPayload() bool String() string }
TYPE ObservationView interface { CohortID() (string,bool) CreatedAt() time.Time Data() map[string]any GetDataShape() colonycore/pkg/pluginapi.ObservationShapeRef HasNarrativeNotes() bool HasStructuredPayload() bool ID() string Notes() string Observer() string OrganismID() (string,bool) ProcedureID() (string,bool) RecordedAt() time.Time UpdatedAt() time.Time }
TYPE OrganismView interface { Attributes() map[string]any CohortID() (string,bool) CreatedAt() time.Time GetCurrentStage() colonycore/pkg/pluginapi.LifecycleStageRef HousingID() (string,bool) ID() string IsActive() bool IsDeceased() bool IsRetired() bool Line() string Name() string ProjectID() (string,bool) ProtocolID() (string,bool) Species() string Stage() colonycore/pkg/pluginapi.LifecycleStage UpdatedAt() time.Time }
TYPE PermitContext interface { Statuses() colonycore/pkg/pluginapi.PermitStatusProvider }
TYPE PermitStatusProvider interface { Active() colonycore/pkg/pluginapi.PermitStatusRef Expired() colonycore/pkg/pluginapi.PermitStatusRef Pending() colonycore/pkg/pluginapi.PermitStatusRef }
TYPE PermitStatusRef interface { Equals(colonycore/pkg/pluginapi.PermitStatusRef) bool IsActive() bool IsExpired() bool String() string }
TYPE PermitView interface { AllowedActivities() []string Authority() string CreatedAt() time.Time FacilityIDs() []string GetStatus(time.Time) colonycore/pkg/pluginapi.PermitStatusRef ID() string IsActive(time.Time) bool IsExpired(time.Time) bool Notes() string PermitNumber() string ProtocolIDs() []string UpdatedAt() time.Time ValidFrom() time.Time ValidUntil() time.Time }
TYPE Plugin interface { Name() string Register(colonycore/pkg/pluginapi.Registry) error Version() string }
TYPE ProjectView interface { Code() string CreatedAt() time.Time Description() string FacilityIDs() []string ID() string Title() string UpdatedAt() time.Time }
TYPE ProtocolContext interface { Active() colonycore/pkg/pluginapi.ProtocolStatusRef Cancelled() colonycore/pkg/pluginapi.ProtocolStatusRef Completed() colonycore/pkg/pluginapi.ProtocolStatusRef Draft() colonycore/pkg/pluginapi.ProtocolStatusRef Suspended() colonycore/pkg/pluginapi.ProtocolStatusRef }
TYPE ProtocolStatusRef interface { Equals(colonycore/pkg/pluginapi.ProtocolStatusRef) bool IsActive() bool IsTerminal() bool String() string }
TYPE ProtocolView interface { CanAcceptNewSubjects() bool Code() string CreatedAt() time.Time Description() string GetCurrentStatus() colonycore/pkg/pluginapi.ProtocolStatusRef ID() string IsActiveProtocol() bool IsTerminalStatus() bool MaxSubjects() int Title() string UpdatedAt() time.Time }
TYPE Registry interface { RegisterDatasetTemplate(colonycore/pkg/datasetapi.Template) error RegisterRule(colonycore/pkg/pluginapi.Rule) RegisterSchema(string,map[string]any) }
TYPE Result struct { unexported }
TYPE ResultBuilder struct { unexported }
TYPE Rule interface { Evaluate(context.Context,colonycore/pkg/pluginapi.RuleView,[]colonycore/pkg/pluginapi.Change) (colonycore/pkg/pluginapi.Result,error) Name() string }
TYPE RuleView interface { FindFacility(string) (colonycore/pkg/pluginapi.FacilityView,bool) FindHousingUnit(string) (colonycore/pkg/pluginapi.HousingUnitView,bool) FindObservation(string) (colonycore/pkg/pluginapi.ObservationView,bool) FindOrganism(string) (colonycore/pkg/pluginapi.OrganismView,bool) FindPermit(string) (colonycore/pkg/pluginapi.PermitView,bool) FindSample(string) (colonycore/pkg/pluginapi.SampleView,bool) FindSupplyItem(string) (colonycore/pkg/pluginapi.SupplyItemView,bool) FindTreatment(string) (colonycore/pkg/pluginapi.TreatmentView,bool) ListFacilities() []colonycore/pkg/pluginapi.FacilityView ListHousingUnits() []colonycore/pkg/pluginapi.HousingUnitView ListObservations() []colonycore/pkg/pluginapi.ObservationView ListOrganisms() []colonycore/pkg/pluginapi.OrganismView ListPermits() []colonycore/pkg/pluginapi.PermitView ListProjects() []colonycore/pkg/pluginapi.ProjectView ListProtocols() []colonycore/pkg/pluginapi.ProtocolView ListSamples() []colonycore/pkg/pluginapi.SampleView ListSupplyItems() []colonycore/pkg/pluginapi.SupplyItemView ListTreatments() []colonycore/pkg/pluginapi.TreatmentView }
TYPE RuleViolationError struct { unexported }
TYPE SampleContext interface { Sources() colonycore/pkg/pluginapi.SampleSourceProvider Statuses() colonycore/pkg/pluginapi.SampleStatusProvider }
TYPE SampleSourceProvider interface { Cohort() colonycore/pkg/pluginapi.SampleSourceRef Environmental() colonycore/pkg/pluginapi.SampleSourceRef Organism() colonycore/pkg/pluginapi.SampleSourceRef Unknown() colonycore/pkg/pluginapi.SampleSourceRef }
TYPE SampleSourceRef interface { Equals(colonycore/pkg/pluginapi.SampleSourceRef) bool IsCohortDerived() bool IsEnvironmental() bool IsOrganismDerived() bool String() string }
TYPE SampleStatusProvider interface { Consumed() colonycore/pkg/pluginapi.SampleStatusRef Disposed() colonycore/pkg/pluginapi.SampleStatusRef InTransit() colonycore/pkg/pluginapi.SampleStatusRef Stored() colonycore/pkg/pluginapi.SampleStatusRef }
TYPE SampleStatusRef interface { Equals(colonycore/pkg/pluginapi.SampleStatusRef) bool IsAvailable() bool IsTerminal() bool String() string }
TYPE SampleView interface { AssayType() string Attributes() map[string]any ChainOfCustody() []map[string]any CohortID() (string,bool) CollectedAt() time.Time CreatedAt() time.Time FacilityID() string GetSource() colonycore/pkg/pluginapi.SampleSourceRef GetStatus() colonycore/pkg/pluginapi.SampleStatusRef ID() string Identifier() string IsAvailable() bool OrganismID() (string,bool) SourceType() string Status() string StorageLocation() string UpdatedAt() time.Time }
TYPE Severity (string)
TYPE SeverityContext interface { Block() colonycore/pkg/pluginapi.SeverityRef Log() colonycore/pkg/pluginapi.SeverityRef Warn() colonycore/pkg/pluginapi.SeverityRef }
TYPE SeverityRef interface { Equals(colonycore/pkg/pluginapi.SeverityRef) bool IsBlocking() bool String() string }
TYPE SupplyContext interface { Statuses() colonycore/pkg/pluginapi.SupplyStatusProvider }
TYPE SupplyItemView interface { Attributes() map[string]any CreatedAt() time.Time Description() string ExpiresAt() (*time.Time,bool) FacilityIDs() []string GetInventoryStatus(time.Time) colonycore/pkg/pluginapi.SupplyStatusRef ID() string IsExpired(time.Time) bool LotNumber() string Name() string ProjectIDs() []string QuantityOnHand() int ReorderLevel() int RequiresReorder(time.Time) bool SKU() string Unit() string UpdatedAt() time.Time }
TYPE SupplyStatusProvider interface { Critical() colonycore/pkg/pluginapi.SupplyStatusRef Expired() colonycore/pkg/pluginapi.SupplyStatusRef Healthy() colonycore/pkg/pluginapi.SupplyStatusRef Reorder() colonycore/pkg/pluginapi.SupplyStatusRef }
TYPE SupplyStatusRef interface { Equals(colonycore/pkg/pluginapi.SupplyStatusRef) bool IsExpired() bool RequiresReorder() bool String() string }
TYPE TreatmentContext interface { Statuses() colonycore/pkg/pluginapi.TreatmentStatusProvider }
TYPE TreatmentStatusProvider interface { Completed() colonycore/pkg/pluginapi.TreatmentStatusRef Flagged() colonycore/pkg/pluginapi.TreatmentStatusRef InProgress() colonycore/pkg/pluginapi.TreatmentStatusRef Planned() colonycore/pkg/pluginapi.TreatmentStatusRef }
TYPE TreatmentStatusRef interface { Equals(colonycore/pkg/pluginapi.TreatmentStatusRef) bool IsActive() bool IsCompleted() bool IsFlagged() bool String() string }
TYPE TreatmentView interface { AdministrationLog() []string AdverseEvents() []string CohortIDs() []string CreatedAt() time.Time DosagePlan() string GetCurrentStatus() colonycore/pkg/pluginapi.TreatmentStatusRef HasAdverseEvents() bool ID() string IsCompleted() bool Name() string OrganismIDs() []string ProcedureID() string UpdatedAt() time.Time }
TYPE VersionProvider interface { APIVersion() string }
TYPE Violation struct { unexported }
TYPE ViolationBuilder struct { unexported }
